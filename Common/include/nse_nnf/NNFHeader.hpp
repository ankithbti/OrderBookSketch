/*
 * NNFHeader.hpp
 *
 *  Created on: 09-Jul-2016
 *      Author: ankithbti
 */

#ifndef COMMON_INCLUDE_NSE_NNF_NNFHEADER_HPP_
#define COMMON_INCLUDE_NSE_NNF_NNFHEADER_HPP_

#include <Common.hpp>

namespace obLib{

// For Little Endian - we have linux Intel which is little endian, so ok
// 2 bytes
struct NNFStBroketEligibilityPerMkt{
	char _mktType[2]; // reserved[4-bit] , Auction, Spot, OddLot, Normal, reserved[1-byte]
};

// 28 bytes
struct ContractDesc{
	char _instName[6];
	char _symbol[10];
	int32_t _expiryDate;
	int32_t _strikePrice;
	char _optionType[2];
	int16_t _caLevel;
};

// 2 bytes
struct StOrderFlags{
	char _orderType[2]; // AON, IOC, GTC, Day, MIT, SL, Market, ATO, Reserved[3-bit], Frozen
	// Modified, Traded, MatchedInd, MF
};

// 1 byte
struct AdditionalOrderFlags{
	char _additionalOrderFlags; // Reserve[1-bit] , COL, Reserved[6-bit]
};

// 4 bytes
struct OrderFillerStruct{
	uint16_t _filler1; // 16 bits for fillers uSIGNed
	char _filler2; // char filler
	char _filler3; // char filler
};

#pragma pack(push, 2) // For memory alignment

struct NNFHeader{
	int16_t _iApiTCode; 	// This field should contain the user ID of the login user.
	int16_t _iApiFuncId; 	// This field should contain the trader ID.
	int32_t _logTime; 		// set to 0 while sending to Host
	// other side it will contains the time when the message was generated by the trading system.
	char _alphaChar[2];		// set to the first two characters of Symbol if the message structure contains Symbol and Series.
	// During logon process, in the SYSTEM_INFORMATfION_OUT message response, this field should contain the number of modules
	// In other cases, it should be set to blank.
	int16_t _transactionCode;	// transaction message number
	int16_t _errorCode;			// set to 0 while sending
	char _timeStamp[8]; 		// set to numeric 0 while sending
	char _timeStamp1[8]; 		// set to numeric zero while sending to host
	char _timeStamp2[8];		// should be set to numeric zero while sending to the host
	int16_t _messageLength;		// length of the entire message, including the length of Message Header.
};
#pragma pack(pop)

}



#endif /* COMMON_INCLUDE_NSE_NNF_NNFHEADER_HPP_ */
